import streamlit as st
import numpy as np
import matplotlib.pyplot as plt

# --- –ù–ê–°–¢–†–û–ô–ö–ê –°–¢–†–ê–ù–ò–¶–´ ---
st.set_page_config(page_title="–ú–æ–¥–µ–ª—é–≤–∞–Ω–Ω—è —Å—Ç—Ä—É–º—É", layout="wide")
st.title("üî¨ –ú–û–î–ï–õ–Æ–í–ê–ù–ù–Ø –î–ò–ù–ê–ú–Ü–ö–ò –ì–£–°–¢–ò–ù–ò –°–¢–†–£–ú–£")
st.markdown("---")

# --- –§–ò–ó–ò–ß–ï–°–ö–ò–ï –ö–û–ù–°–¢–ê–ù–¢–´ ---
E_CHARGE = 1.6e-19
M_ELECTRON = 9.1e-31
N_0 = 1.0e29
T_C = 9.2
TAU = 2e-14

# --- –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –°–ï–°–°–ò–ò ---
if 'simulation_runs' not in st.session_state:
    st.session_state.simulation_runs = []

# --- –°–ê–ô–î–ë–ê–† –î–õ–Ø –í–í–û–î–ê –ü–ê–†–ê–ú–ï–¢–†–û–í ---
with st.sidebar:
    st.header("üéõ –ü–∞—Ä–∞–º–µ—Ç—Ä–∏ –º–æ–¥–µ–ª—é–≤–∞–Ω–Ω—è")
    
    # –í—ã–±–æ—Ä —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã
    T = st.slider("üå° –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ T (K)", 0.1, 20.0, 4.2, 0.1)
    
    # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    is_superconductor = (T < T_C)
    if is_superconductor:
        st.success(f"‚ö°Ô∏è –ù–∞–¥–ø—Ä–æ–≤—ñ–¥–Ω–∏–π —Å—Ç–∞–Ω: T={T}K < T_c={T_C}K")
        N_S = N_0 * (1 - (T / T_C)  4)
        K_COEFF = (N_S * E_CHARGE**2) / M_ELECTRON
        st.metric("–ö–æ–Ω—Å—Ç–∞–Ω—Ç–∞ –µ–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–≥–æ –≤—ñ–¥–≥—É–∫—É K", f"{K_COEFF:.2e}")
    else:
        st.info(f"üîå –ó–≤–∏—á–∞–π–Ω–∏–π –º–µ—Ç–∞–ª: T={T}K ‚â• T_c={T_C}K")
        SIGMA_COEFF = (N_0 * E_CHARGE**2 * TAU) / M_ELECTRON
        st.metric("–ü—Ä–æ–≤—ñ–¥–Ω—ñ—Å—Ç—å –î—Ä—É–¥–µ œÉ", f"{SIGMA_COEFF:.2e} –°–º/–º")
    
    # –ù–∞—á–∞–ª—å–Ω—ã–π —Ç–æ–∫
    J_0 = st.number_input("‚û°Ô∏è –ü–æ—á–∞—Ç–∫–æ–≤–∞ –≥—É—Å—Ç–∏–Ω–∞ —Å—Ç—Ä—É–º—É j‚ÇÄ (–ê/–º¬≤)", 
                         min_value=0.0, max_value=1e11, value=0.0, step=1e6)
    
    # –¢–∏–ø –ø–æ–ª—è
    st.subheader("üìä –¢–∏–ø –∑–æ–≤–Ω—ñ—à–Ω—å–æ–≥–æ –ø–æ–ª—è")
    field_type = st.selectbox("–û–±–µ—Ä—ñ—Ç—å —Ç–∏–ø –ø–æ–ª—è:", 
                             ["–ü–æ—Å—Ç—ñ–π–Ω–µ –ø–æ–ª–µ: E(t) = E‚ÇÄ", 
                              "–õ—ñ–Ω—ñ–π–Ω–µ –ø–æ–ª–µ: E(t) = a ¬∑ t", 
                              "–°–∏–Ω—É—Å–æ—ó–¥–∞–ª—å–Ω–µ: E(t) = E‚ÇÄ ¬∑ sin(œât)"])
    
    # –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–ª—è
    if "–ü–æ—Å—Ç—ñ–π–Ω–µ" in field_type:
        E_0 = st.number_input("E‚ÇÄ (–í/–º)", 0.0, 1e4, 1e3, 100.0)
    elif "–õ—ñ–Ω—ñ–π–Ω–µ" in field_type:
        A = st.number_input("–®–≤–∏–¥–∫—ñ—Å—Ç—å –∑—Ä–æ—Å—Ç–∞–Ω–Ω—è 'a' (–í/(–º¬∑—Å))", 1e8, 1e12, 1e10, 1e9)
    else:  # –°–∏–Ω—É—Å–æ–∏–¥–∞–ª—å–Ω–æ–µ
        E_0 = st.number_input("–ê–º–ø–ª—ñ—Ç—É–¥–∞ E‚ÇÄ (–í/–º)", 0.0, 1e4, 1e3, 100.0)
        F = st.number_input("–ß–∞—Å—Ç–æ—Ç–∞ f (–ì—Ü)", 1e6, 1e9, 1e7, 1e6)
        OMEGA = 2 * np.pi * F

    # --- –ö–ù–û–ü–ö–ò –î–õ–Ø –£–ü–†–ê–í–õ–ï–ù–ò–Ø –ì–†–ê–§–ò–ö–ê–ú–ò ---
    st.subheader("üìà –£–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –≥—Ä–∞—Ñ—ñ–∫–∞–º–∏")
    
    if st.button("‚ûï –î–æ–¥–∞—Ç–∏ –ø–æ—Ç–æ—á–Ω–∏–π –≥—Ä–∞—Ñ—ñ–∫"):
        # –†–∞—Å—á–µ—Ç—ã –¥–ª—è —Ç–µ–∫—É—â–∏—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
        T_END = 1e-9
        T_ARRAY = np.linspace(0, T_END, 1000)
        J_ARRAY = np.zeros_like(T_ARRAY)
        
        # –†–∞—Å—á–µ—Ç —Ç–æ–∫–∞ (—Ç–≤–æ–π –∫–æ–¥)
        if is_superconductor:
            if "–ü–æ—Å—Ç—ñ–π–Ω–µ" in field_type:
                J_ARRAY = J_0 + K_COEFF * E_0 * T_ARRAY
                formula_label = r'$j(t) = j_0 + K E_0 t$'
            elif "–õ—ñ–Ω—ñ–π–Ω–µ" in field_type:
                J_ARRAY = J_0 + (K_COEFF * A * T_ARRAY**2) / 2
                formula_label = r'$j(t) = j_0 + \frac{1}{2} K a t^2$'
            else:  # –°–∏–Ω—É—Å–æ–∏–¥–∞–ª—å–Ω–æ–µ
                J_ARRAY = J_0 + (K_COEFF * E_0 / OMEGA) * (1 - np.cos(OMEGA * T_ARRAY))
                formula_label = r'$j(t) = j_0 + \frac{K E_0}{\omega} (1 - \cos(\omega t))$'
        else:
         tau_T = tau_temperature_dependence(T)
        sigma = (N_0 * E_CHARGE**2 * tau_T) / M_ELECTRON
        if "–ü–æ—Å—Ç—ñ–π–Ω–µ" in field_type:
        J_ARRAY = J_0 * np.exp(-T_ARRAY / tau_T) + sigma * E_0 * (1 - np.exp(-T_ARRAY / tau_T))
        formula_label = r'$j(t) = j_0 e^{-t/\tau(T)} + \sigma(T) E_0 (1 - e^{-t/\tau(T)})$'
    elif "–õ—ñ–Ω—ñ–π–Ω–µ" in field_type:
        J_ARRAY = J_0 * np.exp(-T_ARRAY / tau_T) + sigma * A * (T_ARRAY - tau_T * (1 - np.exp(-T_ARRAY / tau_T)))
        formula_label = r'$j(t) = j_0 e^{-t/\tau(T)} + \sigma(T) a [t - \tau(T)(1 - e^{-t/\tau(T)})]$'
    else:  # –°–∏–Ω—É—Å–æ—ó–¥–∞–ª—å–Ω–µ
        phase_shift = np.arctan(OMEGA * tau_T)
        amplitude_factor = sigma / np.sqrt(1 + (OMEGA * tau_T)**2)
        J_ST = E_0 * amplitude_factor * np.sin(OMEGA * T_ARRAY - phase_shift)
        C = J_0 - E_0 * amplitude_factor * np.sin(-phase_shift)
        J_TR = C * np.exp(-T_ARRAY / tau_T)
        J_ARRAY = J_TR + J_ST
        formula_label = r'$j(t) = j_{\text{tr}}(t) + j_{\text{st}}(t)$'
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≥—Ä–∞—Ñ–∏–∫
        new_run = {
            'T': T,
            'T_array': T_ARRAY * 1e9,  # –≤—Ä–µ–º—è –≤ –Ω—Å
            'J_array': J_ARRAY,
            'formula': formula_label,
            'state': "–ù–∞–¥–ø—Ä–æ–≤—ñ–¥–Ω–∏–∫" if is_superconductor else "–ú–µ—Ç–∞–ª",
            'field_type': field_type
        }
        st.session_state.simulation_runs.append(new_run)
        st.success(f"‚úÖ –ì—Ä–∞—Ñ—ñ–∫ #{len(st.session_state.simulation_runs)} –¥–æ–¥–∞–Ω–æ!")
    
    if st.button("üóë –û—á–∏—Å—Ç–∏—Ç–∏ –≤—Å—ñ –≥—Ä–∞—Ñ—ñ–∫–∏"):
        st.session_state.simulation_runs = []
        st.success("‚úÖ –í—Å—ñ –≥—Ä–∞—Ñ—ñ–∫–∏ –æ—á–∏—â–µ–Ω–æ!")

# --- –í–ò–ó–£–ê–õ–ò–ó–ê–¶–ò–Ø –í–°–ï–• –ì–†–ê–§–ò–ö–û–í ---
st.subheader("üìà –ü–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è –≥—Ä–∞—Ñ—ñ–∫—ñ–≤")

if st.session_state.simulation_runs:
    # –°–æ–∑–¥–∞–Ω–∏–µ –≥—Ä–∞—Ñ–∏–∫–∞
    fig, ax = plt.subplots(figsize=(12, 6))
    
    # –¶–≤–µ—Ç–∞ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –≥—Ä–∞—Ñ–∏–∫–æ–≤
    colors = ['blue', 'red', 'green', 'orange', 'purple', 'brown']
    
    # –†–∏—Å—É–µ–º –≤—Å–µ –≥—Ä–∞—Ñ–∏–∫–∏
    for i, run in enumerate(st.session_state.simulation_runs):
        color = colors[i % len(colors)]
        label = f"#{i+1}: T={run['T']}K ({run['state']})"
        ax.plot(run['T_array'], run['J_array'], 
                color=color, linewidth=2.5, label=label)
    
    ax.set_xlabel('–ß–∞—Å $t$ (–Ω—Å)', fontsize=12)
    ax.set_ylabel('–ì—É—Å—Ç–∏–Ω–∞ —Å—Ç—Ä—É–º—É $j$ (${\\text{A}}/{\\text{–º}^2}$)', fontsize=12)
    ax.set_title('–ü–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è –¥–∏–Ω–∞–º—ñ–∫–∏ –≥—É—Å—Ç–∏–Ω–∏ —Å—Ç—Ä—É–º—É', fontsize=14)
    ax.grid(True, linestyle='--', alpha=0.7)
    ax.ticklabel_format(style='sci', axis='y', scilimits=(0,0))
    ax.legend(loc='upper right')
    
    # –ü–æ–∫–∞–∑–∞—Ç—å –≥—Ä–∞—Ñ–∏–∫ –≤ Streamlit
    st.pyplot(fig)
    
    # --- –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –ì–†–ê–§–ò–ö–ê–• ---
    st.subheader("üìä –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –≥—Ä–∞—Ñ—ñ–∫–∏")
    for i, run in enumerate(st.session_state.simulation_runs):
        with st.expander(f"–ì—Ä–∞—Ñ—ñ–∫ #{i+1}: T={run['T']}K ({run['state']})"):
            st.latex(run['formula'])
            st.metric("–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∏–π —Å—Ç—Ä—É–º", f"{np.max(run['J_array']):.2e} –ê/–º¬≤")
else:
    st.info("üëÜ –î–æ–¥–∞–π—Ç–µ –ø–µ—Ä—à–∏–π –≥—Ä–∞—Ñ—ñ–∫, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—á–∏ –∫–Ω–æ–ø–∫—É –≤ –±–æ–∫–æ–≤—ñ–π –ø–∞–Ω–µ–ª—ñ!")

# --- –ò–ù–§–û–†–ú–ê–¶–ò–Ø ---
with st.expander("‚ÑπÔ∏è –Ü–Ω—Å—Ç—Ä—É–∫—Ü—ñ—è"):
    st.markdown("""
    **–Ø–∫ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—Ç–∏—Å—è:
    1. –í—Å—Ç–∞–Ω–æ–≤—ñ—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ –≤ –±–æ–∫–æ–≤—ñ–π –ø–∞–Ω–µ–ª—ñ
    2. –ù–∞—Ç–∏—Å–Ω—ñ—Ç—å \"‚ûï –î–æ–¥–∞—Ç–∏ –ø–æ—Ç–æ—á–Ω–∏–π –≥—Ä–∞—Ñ—ñ–∫\"
    3. –ó–º—ñ–Ω—ñ—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ —ñ –¥–æ–¥–∞–π—Ç–µ —â–µ –≥—Ä–∞—Ñ—ñ–∫–∏ –¥–ª—è –ø–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è
    4. –í–∏–¥–∞–ª—ñ—Ç—å –≥—Ä–∞—Ñ—ñ–∫–∏ –∫–Ω–æ–ø–∫–æ—é \"üóë –û—á–∏—Å—Ç–∏—Ç–∏ –≤—Å—ñ –≥—Ä–∞—Ñ—ñ–∫–∏\"
    
    –ü–æ—Ä–∞–¥–∞: –°–ø—Ä–æ–±—É–π—Ç–µ –ø–æ—Ä—ñ–≤–Ω—è—Ç–∏ T=4K (–Ω–∞–¥–ø—Ä–æ–≤—ñ–¥–Ω–∏–∫) —Ç–∞ T=10K (–∑–≤–∏—á–∞–π–Ω–∏–π —Å—Ç–∞–Ω)!
    """)
# --- –ò–ù–§–û–†–ú–ê–¶–ò–Ø ---
with st.expander("‚ÑπÔ∏è –î–æ–≤—ñ–¥–∫–∞"):
    st.markdown("""
    –§—ñ–∑–∏—á–Ω—ñ –ø—Ä–∏–Ω—Ü–∏–ø–∏:
    - –ù–∞–¥–ø—Ä–æ–≤—ñ–¥–Ω–∏–∫: –†—ñ–≤–Ω—è–Ω–Ω—è –õ–æ–Ω–¥–æ–Ω—ñ–≤ - —Å—Ç—Ä—É–º —Ä–æ—Å—Ç–µ –±–µ–∑ –æ–ø–æ—Ä—É.
    - –ó–≤–∏—á–∞–π–Ω–∏–π –º–µ—Ç–∞–ª: –ú–æ–¥–µ–ª—å –î—Ä—É–¥–µ - —Å—Ç—Ä—É–º –≤–∏—Ö–æ–¥–∏—Ç—å –Ω–∞ —Å—Ç–∞—Ü—ñ–æ–Ω–∞—Ä–Ω–∏–π —Ä—ñ–≤–µ–Ω—å.
    
    –ü–∞—Ä–∞–º–µ—Ç—Ä–∏ –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º –ø–æ–¥—ñ–±–Ω—ñ –¥–æ –ù—ñ–æ–±—ñ—é (Nb).  T=4.2–ö - —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –∫–∏–ø—ñ–Ω–Ω—è —Ä—ñ–¥–∫–æ–≥–æ –ì–µ–ª—ñ—é.
    """)
